(()=>{function e(){requestAnimationFrame(e),Model3D.controls.update(),Model3D.composer.passes[1].selectedObjects=Model3D.focus,Model3D.composer.render()}window.Model3D={renderer:new THREE.WebGLRenderer({alpha:!0}),scene:new THREE.Scene,camera:null,controls:null,gltf:null,geometry:null,clickList:null,focus:[],init:function(){const t=this.scene,n=this.renderer,o=new THREE.GLTFLoader;t.environment=new THREE.PMREMGenerator(n).fromScene(new THREE.RoomEnvironment,.04).texture,n.setClearAlpha(0),n.setPixelRatio(window.devicePixelRatio),n.setSize(window.innerWidth,window.innerHeight),n.outputEncoding=THREE.sRGBEncoding,document.body.appendChild(n.domElement),n.domElement.id="drawArea",this.camera=new THREE.PerspectiveCamera(40,window.innerWidth/window.innerHeight,1,1e3),this.camera.position.set(5,2,8),this.composer=new THREE.EffectComposer(n);const i=new THREE.OutlinePass(new THREE.Vector2(window.innerWidth,window.innerHeight),t,this.camera);return this.composer.addPass(new THREE.RenderPass(t,this.camera)),this.composer.addPass(i),this.controls=new THREE.OrbitControls(this.camera,n.domElement),this.controls.update(),this.controls.enablePan=!1,this.controls.enableDamping=!0,this.geometry=new THREE.BufferGeometry,this.geometry.setAttribute("position",new THREE.BufferAttribute(new Float32Array(24),3)),this.geometry.setDrawRange(0,0),this.scene.add(new THREE.Line(this.geometry,new THREE.LineBasicMaterial({color:16007990,linewidth:1}))),new Promise(((t,i)=>{o.load("./models/structure.glb",(o=>{const i=this,r=[o.scene.getObjectByName("screws07"),o.scene.getObjectByName("screws08"),o.scene.getObjectByName("Platform"),o.scene.getObjectByName("Protractor")];function s(e){i.focus=[];const t=new THREE.Raycaster,o=new THREE.Vector2;o.x=e.clientX/n.domElement.clientWidth*2-1,o.y=-e.clientY/n.domElement.clientHeight*2+1,t.setFromCamera(o,i.camera);let s=t.intersectObjects(r,!0)[0];s&&(i.focus.push(s=i.clickList.has(s.object.name)?s.object:s.object.parent),(i.clickList.get(s.name)||(()=>{}))(s.name))}this.gltf={Structure:o.scene,Protractor:o.scene.getObjectByName("Protractor_"),Platform:o.scene.getObjectByName("Platform_"),platform:o.scene.getObjectByName("platform01"),lenses:[null,...o.scene.getObjectByName("platform01").children]},this.clickList=new Map([["Protractor",null],["Platform",null],["screws07",null],["screws08",null]]),this.scene.add(o.scene),n.domElement.addEventListener("mousedown",(()=>{n.domElement.addEventListener("mouseup",s),n.domElement.addEventListener("mousemove",(function e(){n.domElement.removeEventListener("mouseup",s),n.domElement.removeEventListener("mousemove",e)}))})),e(),t("Success")}),void 0,i)}))}},window.onresize=function(){Model3D.camera.aspect=window.innerWidth/window.innerHeight,Model3D.camera.updateProjectionMatrix(),Model3D.renderer.setSize(window.innerWidth,window.innerHeight),Model3D.composer.setSize(window.innerWidth,window.innerHeight)},window.Model3D.drawLines=function(e,t){const n=Model3D.geometry.attributes.position.array,o=[e.start,e.end,...t.map((e=>e.end))],i=o.length;for(let e=0;e<i;e++)n[3*e]=o[e].x/285,n[3*e+1]=o[e].z/285+2.35,n[3*e+2]=-o[e].y/285;this.geometry.setDrawRange(0,i),this.geometry.attributes.position.needsUpdate=!0}})();